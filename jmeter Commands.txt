https://www.perfmatrix.com/apache-jmeter-tips-and-tricks/

01 - Jmeter Installation
--------------------------

Install the below plugin
1. 3 basic Graph
2. 5 Additional Graph
3. AutoStop Listener
4. Console Status Logger
5. Custom Thread Group
6. Dummy Sampler
7. Perfmon
8. Weighted Swith Controller
9. JPGC standard set
10. HTTP Simple Table server

02- Jmeter Configuration
-----------------------------

jmeter.property file
Reference Link(Your Udmey Course)
1.If you want to change anything on jmeter.property file don't chage it directly.
  Just copy the parameter and past it on user.propery file (past is on last line) 
  and change the parameter. 
  This will help us to migrate jmeter scripts from one version to another easily

 user.property
 Reference Link (http://samranga.blogspot.com/2017/05/apache-jmeter-provides-2-modes-of.html)
 1. summariser.name=summary
    summariser.interval=30
    summariser.out=true
    summariser.log=true


reportgenerator.property file

1. To generate only transaction controller output in HTML report
# Indicates whether only controller samples are displayed on graphs that support it.
jmeter.reportgenerator.exporter.html.show_controllers_only=true

jmeterRecording
-----------------

To filrer unwanted request :

.*(activity.windows.com|content-autofill.googleapis.com|beacons.gcp.gvt2.com|www.google.com|accounts.google.com|safebrowsing.googleapis.com|icon.internal.local/es/heatmap/_search?size=0).*


Jmeter Scripting Standard settings
----------------------------------
1. Select "Start Next Thread Loop" option at thread group

2. Implement Text Check usinh JSR223 Assertion

   String textCheck=vars.get("var_message");

	if (textCheck=="Message sent successfully")
	{
		AssertionResult.setFailure(false);  
		log.info("TextCheck:Pass,ThreadGroup:"+
		ctx.getThreadGroup().getName()+
		",UserName:"+vars.get("UserName")+
		",IterationNum:"+vars.getIteration()+
		",DateTime:${__time(${__time(dd-MM-YYYY:HH:mm:ss,)},)}"+
		",ThreadNum:"+${__threadNum})
	}
	else{
		AssertionResult.setFailure(true);  
		log.info("TextCheck:Fail,ThreadGroup:"+
		ctx.getThreadGroup().getName()+
		",UserName:"+vars.get("UserName")+
		",IterationNum:"+vars.getIteration()+
		",DateTime:${__time(${__time(dd-MM-YYYY:HH:mm:ss,)},)}"+
		",ThreadNum:"+${__threadNum})
		ctx.setRestartNextLoop(true);
	}


Jmeter Execution
---------------------
Note: Make sure there should not be any space after the ^ symble. Property Syntax ${__P(USER,1)}  ${__P(RAMPUP,1)}  ${__P(ITERATION,1)}

jmeter -n ^
-t C:\Karthik\02_Scripts\Jmeter_HTTPSERVER_POC.jmx ^
-l C:\Karthik\03_Results\03_Nov_2020_SmokeTest\TransactionTime.jtl ^
-JUSER=10 ^
-JRAMPUP=10 ^
-JITERATION=10




Why to execute non-gui mode ?
********************************************************************************************************
-gui  - consumes more resources / memory
-gui - not recommended for heavy load testing
-command line - can be integrated with other systems  -Jenkins/CI …

Step 1 : Goto command line - goto jmeter - bin

Step 2 : Command : 

jmeter -n -t (location of your jmeter test script) -l (location of the result file)
   
            -n - non gui mode
            -t  - location of jmeter script
            -l  - location of result file

jmeter -h  - to get help on jmeter commands 

jmeter -?  - to get information on jmeter command options

create a bat file and past the below cmd
**********************************************************************************************************
C:
Cd Karthik\apache-jmeter-5.3\apache-jmeter-5.3\bin
jmeter -n -t C:\Karthik\02_Scripts\IMS_BP01.jmx -l C:\Karthik\03_Results\IMS_BP01.jtl

To Generate HTML report
***********************************************************************************************************
jmeter -g <log file> -o <path to output folder>
D:\apache-jmeter-5.2.1\bin>jmeter -g D:\Scripts\Result.jtl -o D:\Scripts\HtmlResult

Jmeter Distributed Load Test Checklist
************************************************************************************************************
LG's

1. Copy and Past the same jmeter version on all the LG's
2. Set the JAVA_HOME C:\Program Files\Java\jdk1.8.0_241
3. Set the JMETER_HOME C:\Karthik\apache-jmeter-5.2.1\apache-jmeter-5.2.1
4. Go to user.property file and check the below settings
   server.rmi.ssl.disable=true
   sample_variables=UNIQUE_NUMBER_0,POIUNIQUE_NUMBER_1,ReqID,var_IMS_sensorid_3
5. Run the jmeter-server.bat services on all the jmeter machine and ensure the connection object is created

Controller

1. Go to jmeter.property file and include all the LG IP's
remote_hosts=127.0.0.1,xxx.xxx.xxx.xxx,xxx.xxx.xxx.xxx

2. Go to jemeter.property and set the below changes to see the LG name or IP in you jtl(Note: No need to enable this setting on LG)
jmeter.save.saveservice.hostname=true

To run distribution test
*******************************************************************************************************************************
jmeter -n -t C:\Karthik\02_Scripts\IMS_BP01.jmx -l C:\Karthik\03_Results\IMS_BP01.jtl -r


Important Settings for JTL Analyser
-------------------------------------

I already found the solution. In the jmeter.properties file I had to set

jmeter.save.saveservice.subresults=true

And unselect the Generate parant option in transaction controller

JTL Analyser pyinstaller command
----------------------------------
pipenv run pyinstaller --onefile -w  --paths C:/Users/Ibrahim/.virtualenvs/Tkinter-8T4K30-g app.py

Request Filter
---------------
.*(activity.windows.com|content-autofill.googleapis.com|beacons.gcp.gvt2.com|www.google.com|accounts.google.com|safebrowsing.googleapis.com|icon.internal.local/es/heatmap/_search?size=0).*

JSR233 Assertion
--------------------


Bheanshell Assertion
------------------------

String textCheck=vars.get("var_message");

if(textCheck.contains("Message sent successfully"))
{
	Failure=false;
	log.info("TextCheck:Pass,ThreadGroup:"+
	ctx.getThreadGroup().getName()+
	",UserName:"+vars.get("UserName")+
	",IterationNum:"+vars.getIteration()+
	",DateTime:${__time(${__time(dd-MM-YYYY:HH:mm:ss,)},)}"+
	",ThreadNum:"+${__threadNum}
	);
	
}
else{
	Failure=true;
	FailureMessage="TextCheck:Fail,ThreadGroup:"+
	ctx.getThreadGroup().getName()+
	",UserName:"+vars.get("UserName")+
	",IterationNum:"+vars.getIteration()+
	",DateTime:${__time(${__time(dd-MM-YYYY:HH:mm:ss,)},)}"+
	",ThreadNum:"+${__threadNum};
}

VTS Integration
---------------------
To Get Value:

GET:http://${Var_VTS_ServerIP}:4000/data/get_page?rows=0&page=1&_=1519738913776
JSON Extractor:
  Name of created variable : VTS_batchID
  JSON Path Expression: $.rows[0].BIKE_TT_batchID 
  Match No: 0
  
 To Delete Value:
 GET : http://${Var_VTS_ServerIP}:4000/data/delete_data?colname=BIKE_TT_batchID&rowid=0&_=1519738913776
 
 Unique Number Generation
 ----------------------------
 String uniquenumber ="POI${__time(hhmmss)}${__threadNum}";
vars.put("ReqID",uniquenumber);

User.Property
----------------
server.rmi.ssl.disable=true
sample_variables=IncidentType,IncidentID,ReqID

jmeter.properties
-------------------------

Follow the below steps to enable undo and redo options:

Navigate to “bin” folder of JMeter directory
Open “jmeter.properties” file using Notepad or Notepad++
Search for “undo.history.size”
Uncomment the line “undo.history.size=0” by removing # (sharp sign)
Set a natural number as a value of “undo.history.size” attribute e.g. 1, 5, 10, 50 etc. (This number represents the maximum number of steps that you can undo or redo.)
Save the file “jmeter.properties” and relaunch JMeter to reflect the changes.


File Upload
------------
Before Recording keep the sample file in bin directrory

 
